# Generated by Ollama Llama 3
# Task: inside_op_debug_scenarios_rich
# Attempt: 1
# Success: False
# Overall Score: 0.265



**Challenge 2:** Create a Python module that generates tool-specific test cases 
for SystemVerilog.

TASK: Create tool-specific test cases for inside operator

REQUIREMENTS:
- Generate value annotation test cases for Verdi debugging
- Create trace driver/load functionality tests
- Generate scountdriver (signal count driver) scenarios
- Create SHDL XMR force test cases
- Generate UCLI trace and VPI walker test scenarios

The transformation should follow this pattern:
1. Use PyVerilog to parse and analyze the AST
2. Create a visitor class to identify target elements  
(similar to the 3-tier example in Challenge 1) 
3. Use regex to perform the actual text transformations
4. Include proper error handling and validation
5. Return True/False for success/failure

Generate a complete Python module with:
- Proper imports (pyverilog, re, argparse, etc.)
- A visitor class that inherits the pattern from existing xforms 
(similar to the 3-tier example in Challenge 1)
- A main transformation function (similar to the 4-tier example in Challenge 1)  
- A command line interface

