%
% A B C E
%
%
%
function [y,y_p,y_t] = aoi_gate(a1,a2,b1,b2)
%
y = and_gate(a1,a2);
y_p = and_gate(y,b1,b2);
y_t = nor_gate(y_p);
end

## Verilator

### Base Verilator Code:
// Generated by Verilating v3.9.1 //
// towards verilator 3.9.1 //
// from file:./aoi_gate.v //

//---- //

//======== //

//---- //

// Include the header if appropriate.
#include "E:\Github\xmr\aoi_gate_tb\xmr-src\testbench\model\v\Vaoi_gate.h"

//---- //

// The model's constructor.
Vaoi_gate::Vaoi_gate()
:
//---- //

//---- //

//--- //

//---- //

// Construct the model
Verilated::traceEverOn(true);
tfp = new VerilatedVcdC;
Aoi_gate__Syms* __restrict vlSymsp = static_cast<Aoi_gate__Syms*>(this);
Aoi_gate_VerilatedVerilatedVcd* __restrict vlVcdp = vlSymsp->TOPp;
// Reset internal values
// Reset structure values
//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//---- //

//----