# Generated by Ollama Llama 3
# Task: fsm_state_rename_rich
# Attempt: 10
# Success: False
# Overall Score: 0.485

```python
import pyverilog.parser as parser
from pyverilog.ast import *

# Regex to match and rename states
pattern = r"(\b)([a-zA-Z]+)(_STATE)"
replacement = r"\1\2_\3"

def transform_fsm(input_file, output_file):
    # Parse AST
    ast, directives = parse([input_file])

    visitor = FSMVisitor()
    visitor.visit(ast)

    with open(input_file, "r") as f:
        content = f.read()

    modified_content = re.sub(pattern, replacement, content)

    with open(output_file, "w") as f:
        f.write(modified_content)

    return True

class FSMVisitor:
    def __init__(self):
        self.changes_made = []
        self.found_fsm = False

    def visit(self, node):
        if isinstance(node, Node):
            # Check for target declarations
            if isinstance(node, Decl) and isinstance(node.list[0], EnumDecl):
                for item in node.list[0].list:
                    if item == "STATE":
                        self.found_fsm = True
                        self.changes_made.append("Found FSM")

            # Visit children
            for c in node.children():
                self.visit(c)
```