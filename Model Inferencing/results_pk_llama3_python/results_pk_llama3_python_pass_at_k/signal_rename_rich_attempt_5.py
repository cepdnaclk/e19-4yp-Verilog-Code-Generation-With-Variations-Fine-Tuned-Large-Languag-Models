# Generated by Ollama Llama 3
# Task: signal_rename_rich
# Attempt: 5
# Success: False
# Overall Score: 0.522

from pyverilog.ast import *
import re


def rename_signal(input_file, output_file, old_name, new_name):
    # Parse AST
    ast, directives = parse([input_file])

    # Apply visitor
    class RenameVisitor(ASTVisitor):
        def __init__(self, old_name, new_name):
            self.old_name = old_name
            self.new_name = new_name

        def visit(self, node):

            if isinstance(node, Decl):
                for item in node.list:
                    if hasattr(item, "name") and item.name == self.old_name:
                        item.name = self.new_name

            # Visit children
            for c in node.children():
                self.visit(c)

    visitor = RenameVisitor(old_name, new_name)
    visitor.visit(ast)

    # Perform regex transformations
    with open(input_file, "r") as f:
        content = f.read()

    modified_content = re.sub(r'\b{}\w*\s*=\s*(?P<old_value>\S+?)\b'.format(
        old_name), r"\g<old_value> {}".format(new_name), content)

    # Write output
    with open(output_file, "w") as f:
        f.write(modified_content)
