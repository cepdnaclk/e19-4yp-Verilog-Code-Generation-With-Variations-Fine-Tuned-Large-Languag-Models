# Generated by Ollama Llama 3
# Task: inside_op_xmr_scenarios_rich
# Attempt: 3
# Success: False
# Overall Score: 0.485

```python 
"""Generate test cases for inside operator with cross-module references"""

import pyverilog.parser as parser
import re
from argparse import ArgumentParser


def transform(input_file, output_file):
    # Parse AST
    ast = parser.parse([input_file])
    
    # Apply visitor
    class TestVisitor:
        def __init__(self) -> None:
            self.changes_made = []
            self.module_found = False
    
        def visit(self, node):
            if isinstance(node, parser.Module):
                for item in node.decls.list:
                    if hasattr(item, "name") and item.name == "test":
                        self.module_found = True
                        self.changes_made.append(f"Found {item.name}")
                
                # Visit children
                for c in node.children():
                    self.visit(c)
    
    visitor = TestVisitor()
    visitor.visit(ast)
    
    # Perform regex transformations
    with open(input_file, "r") as f:
        content = f.read()

    # Apply changes...
    modified_content = re.sub(pattern=r'(test|testbench) .* (instance|interface)', 
                              replacement=lambda m: m.group(1).upper() + ' ' + m.group(2),
                              string=content)

    # Write output
    with open(output_file, "w") as f:
        f.write(modified_content)
    
    return True

if __name__ == "__main__":
    parser = ArgumentParser()
    parser.add_argument('input', help='Input file')
    parser.add_argument('output', help='Output file')

    args = parser.parse_args()

    transform(args.input, args.output)
```