# Generated by Ollama Llama 3
# Task: module_name_change_minimal
# Attempt: 4
# Success: False
# Overall Score: 0.522

import sys
import re
from pyverilog.ast import *
from pyverilog.parser import parseFile, astToPython
from pyverilog.astutils import ASTTransformer


class ModuleNameTransform(ASTTransformer):
    def __init__(self, old_name, new_name):
        self.old_name = old_name
        self.new_name = new_name

    def visit_module(self, node):
        if (node.name == self.old_name):
            node.name = self.new_name
            # update endmodule comment
            for i in range(len(node.end)):
                if (type(node.end[i]) is EndModule and re.search(' ' + self.old_name, str(node.end[i]))):
                    node.end[i].comment = node.end[i].comment.replace(self.old_name, self.new_name)

        return node

    def visit_portlist(self, node):
        for i in range(len(node.port)):
            if (type(node.port[i]) is Port and re.search(' ' + self.old_name, str(node.port[i]))):
                node.port[i].name = node.port[i].name.replace(self.old_name, self.new_name)
        return node


def main(argv=None):
    usage = "Usage: python rename_module.py [OLD NAME] [NEW NAME]"
    if (len(sys.argv) < 3 or len(sys.argv) > 4):
        print(usage)
        sys.exit()

    old_name = str(sys.argv[1])
    new_name = str(sys.argv[2])

    if (len(sys.argv) == 4 and bool(re.match(r'^-v$', str(sys.argv[3])))):
        astToPython(parseFile(sys.argv[1]), showAST=True, visitor=ModuleNameTransform(old_name, new_name))
    else:
        try:
            f = open(str(sys.argv[1]))
            contents = f.read()
            f.close()

            contents = re.sub(r'(\n\s*)' + old_name + r'(?=([A-Z]|$))', lambda m: '\n' + new_name + m.group(2), contents)
            with open(str(sys.argv[1]), 'w') as f:
                f.write(contents)

        except Exception as e:
            print("Error occurred while renaming module.")
            print(e)


if __name__ == "__main__":
    main()